import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createBaseVNode, e as createStaticVNode } from "./app-ba018c05.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createBaseVNode(
  "div",
  { class: "custom-container info" },
  [
    /* @__PURE__ */ createBaseVNode("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      "xmlns:xlink": "http://www.w3.org/1999/xlink",
      viewBox: "0 0 24 24"
    }, [
      /* @__PURE__ */ createBaseVNode("g", {
        fill: "none",
        stroke: "currentColor",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
      }, [
        /* @__PURE__ */ createBaseVNode("circle", {
          cx: "12",
          cy: "12",
          r: "9"
        }),
        /* @__PURE__ */ createBaseVNode("path", { d: "M12 8h.01" }),
        /* @__PURE__ */ createBaseVNode("path", { d: "M11 12h1v4h1" })
      ])
    ]),
    /* @__PURE__ */ createBaseVNode("p", { class: "custom-container-title" }, "INFO"),
    /* @__PURE__ */ createBaseVNode("p", null, "本文首发公众号【一名打字员】")
  ],
  -1
  /* HOISTED */
);
const _hoisted_2 = /* @__PURE__ */ createStaticVNode('<h2 id="说在前面" tabindex="-1"><a class="header-anchor" href="#说在前面" aria-hidden="true">#</a> 说在前面</h2><p>今天给大家推荐一个<code>Rust</code>的自研三方框架<code>Labrador</code>，里面封装了淘宝客、京东联盟、微信支付、微信公众号、支付宝支付以及拼多多等API。虽然里面的API还有待完善，但是基础设施已经有了，后面就是有条件的往上面堆API了。</p><p>很多人对淘宝客感兴趣，这个我们下次再聊；现在我们以对接微信以及支付宝支付为例子，看看使用这个框架都需要做多少工作吧！</p><h2 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h2><p>想要对接支付宝、微信，首先我们需要在对应开放平台中申请所需要的参数。这里不再赘述，直接贴上目前自研平台的支付配置截图： 支付宝 <img src="https://segmentfault.com/img/bVc1NCI" alt="image.png"> 微信 <img src="https://segmentfault.com/img/bVc1NCT" alt="image.png"></p><p>以上就是我们需要提前准备好的工作。然后我们需要新建一个工程</p><p><code>cargo new pay_test</code> 然后编辑Cargo.toml引入<code>Labrador</code>库。 <code>labrador = {version=&quot;0.1.0&quot;, features=[&quot;wechat&quot;, &quot;alipay&quot;]}</code></p><p>在main文件中，我们先初始化两个client。</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">labrador<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">WeChatPayClient</span><span class="token punctuation">,</span> <span class="token class-name">SimpleStorage</span><span class="token punctuation">,</span> <span class="token class-name">TradeType</span><span class="token punctuation">,</span> <span class="token class-name">WeChatPayRequestV3</span><span class="token punctuation">,</span> <span class="token class-name">Amount</span><span class="token punctuation">,</span> <span class="token class-name">Payer</span><span class="token punctuation">,</span> <span class="token class-name">AlipayTradeWapPayRequest</span><span class="token punctuation">,</span> <span class="token class-name">AlipayClient</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token namespace">chrono<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Local</span><span class="token punctuation">,</span> <span class="token class-name">SecondsFormat</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token attribute attr-name">#[tokio::main]</span>\n<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 微信  ↓</span>\n    <span class="token keyword">let</span> wechat <span class="token operator">=</span>  <span class="token class-name">WeChatPayClient</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;appid&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;secret&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SimpleStorage</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">key_v3</span><span class="token punctuation">(</span><span class="token string">&quot;api_v3_key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">private_key</span><span class="token punctuation">(</span><span class="token string">&quot;private_key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> wechat_client <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">wxpay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 采用V3版本的微信统一下单API</span>\n    <span class="token keyword">let</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">unified_order_v3</span><span class="token punctuation">(</span><span class="token class-name">TradeType</span><span class="token punctuation">::</span><span class="token class-name">Jsapi</span><span class="token punctuation">,</span> <span class="token class-name">WeChatPayRequestV3</span> <span class="token punctuation">{</span>\n        appid<span class="token punctuation">:</span> <span class="token string">&quot;appid&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        mch_id<span class="token punctuation">:</span> <span class="token string">&quot;mchid&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        description<span class="token punctuation">:</span> <span class="token string">&quot;测试商品支付&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        out_trade_no<span class="token punctuation">:</span> <span class="token string">&quot;1602920235sdfsdfas32234234&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        time_expire<span class="token punctuation">:</span> <span class="token class-name">Local</span><span class="token punctuation">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_rfc3339_opts</span><span class="token punctuation">(</span><span class="token class-name">SecondsFormat</span><span class="token punctuation">::</span><span class="token class-name">Secs</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        attach<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>\n        notify_url<span class="token punctuation">:</span> <span class="token string">&quot;https:xxx.cn/trade/notify&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        amount<span class="token punctuation">:</span> <span class="token class-name">Amount</span> <span class="token punctuation">{</span>\n            total<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            currency<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;CNY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            payer_total<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>\n            payer_currency<span class="token punctuation">:</span> <span class="token class-name">None</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        payer<span class="token punctuation">:</span> <span class="token class-name">Payer</span> <span class="token punctuation">{</span>\n            openid<span class="token punctuation">:</span> <span class="token string">&quot;oUVZc6S_uGx3bsNPUA-davo4Dt7Us&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        detail<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>\n        scene_info<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>\n        settle_info<span class="token punctuation">:</span> <span class="token class-name">None</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">match</span> result<span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Ok</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token macro property">todo!</span><span class="token punctuation">(</span>做一些伟大的事情<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token macro property">todo!</span><span class="token punctuation">(</span>做一些伟大的事情<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment">// 支付宝  ↓</span>\n    <span class="token keyword">let</span> param <span class="token operator">=</span> <span class="token class-name">AlipayTradeWapPayRequest</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 请求参数补全</span>\n    <span class="token keyword">let</span> alipay_client <span class="token operator">=</span> <span class="token class-name">AlipayClient</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;appKey&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set_private_key</span><span class="token punctuation">(</span><span class="token string">&quot;private_key&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span>\n        <span class="token punctuation">.</span><span class="token function">set_alipay_public_key</span><span class="token punctuation">(</span><span class="token string">&quot;alipay_public_key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set_alipay_root_cert</span><span class="token punctuation">(</span><span class="token string">&quot;alipay_root_cert&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set_app_cert</span><span class="token punctuation">(</span><span class="token string">&quot;app_cert&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">match</span> alipay_client<span class="token punctuation">.</span><span class="token function">wap_pay</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Ok</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token macro property">todo!</span><span class="token punctuation">(</span>做一些伟大的事情<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">Err</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token macro property">todo!</span><span class="token punctuation">(</span>做一些伟大的事情<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    \n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用下来是不是很方便，基本上与官方一致；另外由于对应API太多，如果框架内置的API不能满足对应的要求的话，可以直接根据文档内容实现对应的请求<code>trait</code>，就能够使用对应的API了。 然后配套文档也基本都完善了，在使用的过程中可以很方便的查看某些方法使用的方式。 <img src="https://segmentfault.com/img/bVc1NDp" alt="image.png"></p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>测试的话比较头疼，就只能大家各自玩玩了。，这里提供一个基于<code>Labrador</code>的网页支付链接，整体是基于上面的最开始提到的自研平台的支付模块，</p><p>目前平台对接了支付宝和微信，如果需要体验的话可以扫描下方进行扫码支付体验，仅供体验请勿实际支付。 <img src="https://segmentfault.com/img/bVc1NEJ" alt="c08ef8c248d367c3a6c22cb50eeb626.jpg"></p><h2 id="写在最后" tabindex="-1"><a class="header-anchor" href="#写在最后" aria-hidden="true">#</a> 写在最后</h2><p>今天主要是简单介绍一下<code>Labrador</code>框架，以及一个简单的使用示例。微信、支付宝生态在其他语言有很多方便的框架，本人也是微信开发者联盟的开发者，之前致力于<code>Java</code>模块的<code>WxJava</code>进行一些企业微信的API集成。</p><p>由于技术栈原因，最近几年使用<code>Rust</code>进行日常工作开发，这块的生态还有待完善，所以决定一点点的完善掉，有兴趣的朋友可以直接在crates.io中或者最大的开源网站某git中搜索<code>Labrador</code>，期待大家star以及提交PR一起完善项目。</p><p>另外如果有Java小伙伴想要转Rust岗位，可以推荐使用我们自研<code>Akita</code>ORM框架，该框架语法与<code>MyBatis-Plus</code>基本一致，所以Java小伙伴使用起来应该十分顺畅。</p>', 17);
const _hoisted_19 = [
  _hoisted_1,
  _hoisted_2
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_19);
}
const _081701_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "081701.html.vue"]]);
export {
  _081701_html as default
};
